import React, {useState} from 'react'// {useState, useRef, useEffect} from 'react'
import {Link} from 'react-router-dom'
import useFetch from 'hooks/useFetch'

const Autentification = props => {
    const isLogin = props.match.path === '/login'
    const pageTitle = isLogin ? 'Sign In' : 'Sign up'
    const descriptionLink = isLogin ? '/register' : '/login'
    const descriptionText = isLogin ? 'Need an account' : 'Have an account'
    const apiUrl = isLogin ? '/users/login' : '/users'
    const [username, setUsername] = useState('') 
  
    const [email, setEmail] = useState('')//создает хук внутри нашей компоненты
                                         //когда мы внутри указываем 0 - по умолчанию
                                         //по факту count это state, а setCount - setState

    const [password, setPassword] = useState('');    
    const [{isLoading, error, response}, doFetch] = useFetch(apiUrl) 

    //const emailRef = useRef(null)// здесь такой подходне очень хорошо, но иногда он необходим
                                //дает нам ссылку(reference) на объект
                                //создаем ссылку на инпут и мы можем обр-ся  к нему как к дом-элементу
                                //это плохо, так как эта ссылка = это иммутабельны объект и реакт про него ничего не знает
                                //исп-ть только с манипуляциями с ДОМ для фокуса,например.   
   
    //useEffect(() => {           //хук для работы с сайд-эффектами, вызывается после каждого ререндеринга(смены сотояния)
       // document.title = email        
    //}, [email]);                //если мы не хотим его так часто вызывать, для этого добавляем array(как второй агрумент ф-ии), если передаем [пустой] 
                                //то сайдэффект будт только однажды(но не путстаь c componentDidMount)
                                //здесь мы имеем доступ к нашему стейту
                                //в функ-м прог-ии запросы являются сайд-эффектами(все что происходит
                                //снаружи реакта, например, запись в олкалсторадж, манипуляции с ДОМ, данные логи, веб-сокеты и тд)
   
    const handleSubmit = (event) => {
        event.preventDefault();
        
        const user = isLogin ? {email, password} : {email, password, username}
        doFetch({
            method: 'post',
            data: {
                user
            }
        })
    }   

    return (
        <div className='auth-page'>
            <div className='row'>
                <div className='col-md-6 offset-md-3 col-xs-12'>
                    <h1 className='text-xs-center'>{pageTitle}</h1>
                    <p className='text-xs-center'>
                    <Link to={descriptionLink}>{descriptionText}</Link>
                    </p>
                    <form>
                    <fieldset>
                        {!isLogin && (
                            <fieldset className='form-group'>
                                <input 
                                    type='text'
                                    className=' form-control for-contril-lg' 
                                    placeholder='Username'
                                    value={username}
                                    onChange={e => setUsername(e.target.value)}// Обнови состояние
                                //ref={emailRef}
                                >
                                </input>
                            </fieldset>
                        )}
                        </fieldset>
                        <fieldset>
                            <fieldset className='form-group'>
                                <input 
                                    type='email'
                                    className=' form-control for-contril-lg' 
                                    placeholder='Email'
                                    value={email}
                                    onChange={e => setEmail(e.target.value)}
                                    //ref={emailRef}
                                >
                                </input>
                            </fieldset>
                        </fieldset>
                        <fieldset>
                            <fieldset className='form-group'>
                                <input type='password' 
                                    className='form-control for-contril-lg' 
                                    placeholder='Password'
                                    value={[password]}
                                    onChange={e => setPassword(e.target.value)}> 
                                </input>
                            </fieldset>
                        </fieldset>
                    </form>
                    <button 
                        className='btn btn-lg btn-primary pull-xs-right'
                        type='submit' 
                        disabled={isLoading}
                        onClick={handleSubmit}>
                        {pageTitle}
                    </button>
                </div> 
            </div>
        </div>
    )}

export default Autentification